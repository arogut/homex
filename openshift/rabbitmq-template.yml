# TODO: NOT TESTED
apiVersion: v1
kind: Template
labels:
  template: rabbitmq
metadata:
  annotations:
    description: Application template for RabbitMQ
  name: rabbitmq
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: rabbitmq
    name: rabbitmq
  spec:
    replicas: 1
    selector:
      app: rabbitmq
      deploymentconfig: rabbitmq
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq
          deploymentconfig: rabbitmq
      spec:
        containers:
          - env:
              - name: RABBITMQ_DEFAULT_USER
                valueFrom:
                  secretKeyRef:
                    key: username
                    name: rabbitmq
              - name: RABBITMQ_DEFAULT_PASS
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: rabbitmq
            image: >-
              rabbitmq@sha256:8e3cd7014893081512dec1e02a6df0b2a8c253bbd324886a8a32faf4563a860c
            imagePullPolicy: Always
            name: rabbitmq
            ports:
              - containerPort: 4369
                protocol: TCP
              - containerPort: 5671
                protocol: TCP
              - containerPort: 5672
                protocol: TCP
              - containerPort: 25672
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/lib/rabbitmq
                name: rabbitmq-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - emptyDir: {}
            name: rabbitmq-1
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - rabbitmq
          from:
            kind: ImageStreamTag
            name: 'rabbitmq:latest'
            namespace: shas
          lastTriggeredImage: >-
            rabbitmq@sha256:8e3cd7014893081512dec1e02a6df0b2a8c253bbd324886a8a32faf4563a860c
        type: ImageChange

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: rabbitmq
    name: rabbitmq
  spec:
    lookupPolicy:
      local: false
    tags:
      - from:
          kind: DockerImage
          name: rabbitmq
        importPolicy: {}
        name: latest
        referencePolicy:
          type: Source

- apiVersion: v1
  stringData:
    password: ${RABBITMQ_PASSWORD}
    username: ${RABBITMQ_USER}
  kind: Secret
  metadata:
    name: rabbitmq
  type: Opaque



parameters:
- description: RabbitMQ username
  name: RABBITMQ_USER
  required: true
  value: shas_user
- description: RabbitMQ password
  name: RABBITMQ_PASSWORD
  required: true
  value: shas_password